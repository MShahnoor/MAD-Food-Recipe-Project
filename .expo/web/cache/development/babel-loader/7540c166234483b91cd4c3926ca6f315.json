{"ast":null,"code":"import React, { useLayoutEffect } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport styles from \"./styles\";\nimport { getIngredientName, getAllIngredients } from \"../../data/MockDataAPI\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function IngredientsDetailsScreen(props) {\n  var _route$params;\n\n  var navigation = props.navigation,\n      route = props.route;\n  var item = (_route$params = route.params) == null ? void 0 : _route$params.ingredients;\n  var ingredientsArray = getAllIngredients(item);\n  useLayoutEffect(function () {\n    var _route$params2;\n\n    navigation.setOptions({\n      title: (_route$params2 = route.params) == null ? void 0 : _route$params2.title,\n      headerTitleStyle: {\n        fontSize: 16\n      }\n    });\n  }, []);\n\n  var onPressIngredient = function onPressIngredient(item) {\n    var name = getIngredientName(item.ingredientId);\n    var ingredient = item.ingredientId;\n    navigation.navigate(\"Ingredient\", {\n      ingredient: ingredient,\n      name: name\n    });\n  };\n\n  var renderIngredient = function renderIngredient(_ref) {\n    var item = _ref.item;\n    return _jsx(TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,0.9)\",\n      onPress: function onPress() {\n        return onPressIngredient(item[0]);\n      },\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Image, {\n          style: styles.photo,\n          source: {\n            uri: item[0].photo_url\n          }\n        }), _jsx(Text, {\n          style: styles.title,\n          children: item[0].name\n        }), _jsx(Text, {\n          style: {\n            color: \"grey\"\n          },\n          children: item[1]\n        })]\n      })\n    });\n  };\n\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      vertical: true,\n      showsVerticalScrollIndicator: false,\n      numColumns: 3,\n      data: ingredientsArray,\n      renderItem: renderIngredient,\n      keyExtractor: function keyExtractor(item) {\n        return \"\" + item.recipeId;\n      }\n    })\n  });\n}","map":{"version":3,"names":["React","useLayoutEffect","styles","getIngredientName","getAllIngredients","IngredientsDetailsScreen","props","navigation","route","item","params","ingredients","ingredientsArray","setOptions","title","headerTitleStyle","fontSize","onPressIngredient","name","ingredientId","ingredient","navigate","renderIngredient","container","photo","uri","photo_url","color","recipeId"],"sources":["C:/MAD/Food Recipe App/src/screens/IngredientsDetails/IngredientsDetailsScreen.js"],"sourcesContent":["import React, { useLayoutEffect } from \"react\";\nimport { FlatList, Text, View, Image, TouchableHighlight } from \"react-native\";\nimport styles from \"./styles\";\nimport { getIngredientName, getAllIngredients } from \"../../data/MockDataAPI\";\n\nexport default function IngredientsDetailsScreen(props) {\n\tconst { navigation, route } = props;\n\n\tconst item = route.params?.ingredients;\n\tconst ingredientsArray = getAllIngredients(item);\n\n\tuseLayoutEffect(() => {\n\t\tnavigation.setOptions({\n\t\t\ttitle: route.params?.title,\n\t\t\theaderTitleStyle: {\n\t\t\t\tfontSize: 16,\n\t\t\t},\n\t\t});\n\t}, []);\n\n\tconst onPressIngredient = item => {\n\t\tlet name = getIngredientName(item.ingredientId);\n\t\tlet ingredient = item.ingredientId;\n\t\tnavigation.navigate(\"Ingredient\", { ingredient, name });\n\t};\n\n\tconst renderIngredient = ({ item }) => (\n\t\t<TouchableHighlight\n\t\t\tunderlayColor=\"rgba(73,182,77,0.9)\"\n\t\t\tonPress={() => onPressIngredient(item[0])}\n\t\t>\n\t\t\t<View style={styles.container}>\n\t\t\t\t<Image\n\t\t\t\t\tstyle={styles.photo}\n\t\t\t\t\tsource={{\n\t\t\t\t\t\turi: item[0]\n\t\t\t\t\t\t\t.photo_url,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Text style={styles.title}>\n\t\t\t\t\t{item[0].name}\n\t\t\t\t</Text>\n\t\t\t\t<Text style={{ color: \"grey\" }}>\n\t\t\t\t\t{item[1]}\n\t\t\t\t</Text>\n\t\t\t</View>\n\t\t</TouchableHighlight>\n\t);\n\n\treturn (\n\t\t<View>\n\t\t\t<FlatList\n\t\t\t\tvertical\n\t\t\t\tshowsVerticalScrollIndicator={false}\n\t\t\t\tnumColumns={3}\n\t\t\t\tdata={ingredientsArray}\n\t\t\t\trenderItem={renderIngredient}\n\t\t\t\tkeyExtractor={item =>\n\t\t\t\t\t`${item.recipeId}`\n\t\t\t\t}\n\t\t\t/>\n\t\t</View>\n\t);\n}\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,eAAhB,QAAuC,OAAvC;;;;;;AAEA,OAAOC,MAAP;AACA,SAASC,iBAAT,EAA4BC,iBAA5B;;;AAEA,eAAe,SAASC,wBAAT,CAAkCC,KAAlC,EAAyC;EAAA;;EACvD,IAAQC,UAAR,GAA8BD,KAA9B,CAAQC,UAAR;EAAA,IAAoBC,KAApB,GAA8BF,KAA9B,CAAoBE,KAApB;EAEA,IAAMC,IAAI,oBAAGD,KAAK,CAACE,MAAT,qBAAG,cAAcC,WAA3B;EACA,IAAMC,gBAAgB,GAAGR,iBAAiB,CAACK,IAAD,CAA1C;EAEAR,eAAe,CAAC,YAAM;IAAA;;IACrBM,UAAU,CAACM,UAAX,CAAsB;MACrBC,KAAK,oBAAEN,KAAK,CAACE,MAAR,qBAAE,eAAcI,KADA;MAErBC,gBAAgB,EAAE;QACjBC,QAAQ,EAAE;MADO;IAFG,CAAtB;EAMA,CAPc,EAOZ,EAPY,CAAf;;EASA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAR,IAAI,EAAI;IACjC,IAAIS,IAAI,GAAGf,iBAAiB,CAACM,IAAI,CAACU,YAAN,CAA5B;IACA,IAAIC,UAAU,GAAGX,IAAI,CAACU,YAAtB;IACAZ,UAAU,CAACc,QAAX,CAAoB,YAApB,EAAkC;MAAED,UAAU,EAAVA,UAAF;MAAcF,IAAI,EAAJA;IAAd,CAAlC;EACA,CAJD;;EAMA,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB;IAAA,IAAGb,IAAH,QAAGA,IAAH;IAAA,OACxB,KAAC,kBAAD;MACC,aAAa,EAAC,qBADf;MAEC,OAAO,EAAE;QAAA,OAAMQ,iBAAiB,CAACR,IAAI,CAAC,CAAD,CAAL,CAAvB;MAAA,CAFV;MAAA,UAIC,MAAC,IAAD;QAAM,KAAK,EAAEP,MAAM,CAACqB,SAApB;QAAA,WACC,KAAC,KAAD;UACC,KAAK,EAAErB,MAAM,CAACsB,KADf;UAEC,MAAM,EAAE;YACPC,GAAG,EAAEhB,IAAI,CAAC,CAAD,CAAJ,CACHiB;UAFK;QAFT,EADD,EAQC,KAAC,IAAD;UAAM,KAAK,EAAExB,MAAM,CAACY,KAApB;UAAA,UACEL,IAAI,CAAC,CAAD,CAAJ,CAAQS;QADV,EARD,EAWC,KAAC,IAAD;UAAM,KAAK,EAAE;YAAES,KAAK,EAAE;UAAT,CAAb;UAAA,UACElB,IAAI,CAAC,CAAD;QADN,EAXD;MAAA;IAJD,EADwB;EAAA,CAAzB;;EAuBA,OACC,KAAC,IAAD;IAAA,UACC,KAAC,QAAD;MACC,QAAQ,MADT;MAEC,4BAA4B,EAAE,KAF/B;MAGC,UAAU,EAAE,CAHb;MAIC,IAAI,EAAEG,gBAJP;MAKC,UAAU,EAAEU,gBALb;MAMC,YAAY,EAAE,sBAAAb,IAAI;QAAA,YACdA,IAAI,CAACmB,QADS;MAAA;IANnB;EADD,EADD;AAcA"},"metadata":{},"sourceType":"module"}