{"ast":null,"code":"import React, { useLayoutEffect } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport styles from \"./styles\";\nimport { getIngredientName, getAllIngredients } from \"../../data/MockDataAPI\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function IngredientsDetailsScreen(props) {\n  var _route$params;\n\n  var navigation = props.navigation,\n      route = props.route;\n  var item = (_route$params = route.params) == null ? void 0 : _route$params.ingredients;\n  var ingredientsArray = getAllIngredients(item);\n  useLayoutEffect(function () {\n    var _route$params2;\n\n    navigation.setOptions({\n      title: (_route$params2 = route.params) == null ? void 0 : _route$params2.title,\n      headerTitleStyle: {\n        fontSize: 16\n      }\n    });\n  }, []);\n\n  var onPressIngredient = function onPressIngredient(item) {\n    var name = getIngredientName(item.ingredientId);\n    var ingredient = item.ingredientId;\n    navigation.navigate(\"Ingredient\", {\n      ingredient: ingredient,\n      name: name\n    });\n  };\n\n  var renderIngredient = function renderIngredient(_ref) {\n    var item = _ref.item;\n    return _jsx(TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,0.9)\",\n      onPress: function onPress() {\n        return onPressIngredient(item[0]);\n      },\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Image, {\n          style: styles.photo,\n          source: {\n            uri: item[0].photo_url\n          }\n        }), _jsx(Text, {\n          style: styles.title,\n          children: item[0].name\n        }), _jsx(Text, {\n          style: {\n            color: \"grey\"\n          },\n          children: item[1]\n        })]\n      })\n    });\n  };\n\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      vertical: true,\n      showsVerticalScrollIndicator: false,\n      numColumns: 3,\n      data: ingredientsArray,\n      renderItem: renderIngredient,\n      keyExtractor: function keyExtractor(item) {\n        return \"\" + item.recipeId;\n      }\n    })\n  });\n}","map":{"version":3,"names":["React","useLayoutEffect","styles","getIngredientName","getAllIngredients","IngredientsDetailsScreen","props","navigation","route","item","params","ingredients","ingredientsArray","setOptions","title","headerTitleStyle","fontSize","onPressIngredient","name","ingredientId","ingredient","navigate","renderIngredient","container","photo","uri","photo_url","color","recipeId"],"sources":["C:/MAD/SP20-BCS-137-Fetch-Assignment/src/screens/IngredientsDetails/IngredientsDetailsScreen.js"],"sourcesContent":["import React, { useLayoutEffect } from \"react\";\nimport { FlatList, Text, View, Image, TouchableHighlight } from \"react-native\";\nimport styles from \"./styles\";\nimport { getIngredientName, getAllIngredients } from \"../../data/MockDataAPI\";\n\nexport default function IngredientsDetailsScreen(props) {\n  const { navigation, route } = props;\n\n  const item = route.params?.ingredients;\n  const ingredientsArray = getAllIngredients(item);\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: route.params?.title,\n      headerTitleStyle: {\n        fontSize: 16,\n      },\n    });\n  }, []);\n\n  const onPressIngredient = (item) => {\n    let name = getIngredientName(item.ingredientId);\n    let ingredient = item.ingredientId;\n    navigation.navigate(\"Ingredient\", { ingredient, name });\n  };\n\n  const renderIngredient = ({ item }) => (\n    <TouchableHighlight underlayColor=\"rgba(73,182,77,0.9)\" onPress={() => onPressIngredient(item[0])}>\n      <View style={styles.container}>\n        <Image style={styles.photo} source={{ uri: item[0].photo_url }} />\n        <Text style={styles.title}>{item[0].name}</Text>\n        <Text style={{ color: \"grey\" }}>{item[1]}</Text>\n      </View>\n    </TouchableHighlight>\n  );\n\n  return (\n    <View>\n      <FlatList vertical showsVerticalScrollIndicator={false} numColumns={3} data={ingredientsArray} renderItem={renderIngredient} keyExtractor={(item) => `${item.recipeId}`} />\n    </View>\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,eAAhB,QAAuC,OAAvC;;;;;;AAEA,OAAOC,MAAP;AACA,SAASC,iBAAT,EAA4BC,iBAA5B;;;AAEA,eAAe,SAASC,wBAAT,CAAkCC,KAAlC,EAAyC;EAAA;;EACtD,IAAQC,UAAR,GAA8BD,KAA9B,CAAQC,UAAR;EAAA,IAAoBC,KAApB,GAA8BF,KAA9B,CAAoBE,KAApB;EAEA,IAAMC,IAAI,oBAAGD,KAAK,CAACE,MAAT,qBAAG,cAAcC,WAA3B;EACA,IAAMC,gBAAgB,GAAGR,iBAAiB,CAACK,IAAD,CAA1C;EAEAR,eAAe,CAAC,YAAM;IAAA;;IACpBM,UAAU,CAACM,UAAX,CAAsB;MACpBC,KAAK,oBAAEN,KAAK,CAACE,MAAR,qBAAE,eAAcI,KADD;MAEpBC,gBAAgB,EAAE;QAChBC,QAAQ,EAAE;MADM;IAFE,CAAtB;EAMD,CAPc,EAOZ,EAPY,CAAf;;EASA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACR,IAAD,EAAU;IAClC,IAAIS,IAAI,GAAGf,iBAAiB,CAACM,IAAI,CAACU,YAAN,CAA5B;IACA,IAAIC,UAAU,GAAGX,IAAI,CAACU,YAAtB;IACAZ,UAAU,CAACc,QAAX,CAAoB,YAApB,EAAkC;MAAED,UAAU,EAAVA,UAAF;MAAcF,IAAI,EAAJA;IAAd,CAAlC;EACD,CAJD;;EAMA,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB;IAAA,IAAGb,IAAH,QAAGA,IAAH;IAAA,OACvB,KAAC,kBAAD;MAAoB,aAAa,EAAC,qBAAlC;MAAwD,OAAO,EAAE;QAAA,OAAMQ,iBAAiB,CAACR,IAAI,CAAC,CAAD,CAAL,CAAvB;MAAA,CAAjE;MAAA,UACE,MAAC,IAAD;QAAM,KAAK,EAAEP,MAAM,CAACqB,SAApB;QAAA,WACE,KAAC,KAAD;UAAO,KAAK,EAAErB,MAAM,CAACsB,KAArB;UAA4B,MAAM,EAAE;YAAEC,GAAG,EAAEhB,IAAI,CAAC,CAAD,CAAJ,CAAQiB;UAAf;QAApC,EADF,EAEE,KAAC,IAAD;UAAM,KAAK,EAAExB,MAAM,CAACY,KAApB;UAAA,UAA4BL,IAAI,CAAC,CAAD,CAAJ,CAAQS;QAApC,EAFF,EAGE,KAAC,IAAD;UAAM,KAAK,EAAE;YAAES,KAAK,EAAE;UAAT,CAAb;UAAA,UAAiClB,IAAI,CAAC,CAAD;QAArC,EAHF;MAAA;IADF,EADuB;EAAA,CAAzB;;EAUA,OACE,KAAC,IAAD;IAAA,UACE,KAAC,QAAD;MAAU,QAAQ,MAAlB;MAAmB,4BAA4B,EAAE,KAAjD;MAAwD,UAAU,EAAE,CAApE;MAAuE,IAAI,EAAEG,gBAA7E;MAA+F,UAAU,EAAEU,gBAA3G;MAA6H,YAAY,EAAE,sBAACb,IAAD;QAAA,YAAaA,IAAI,CAACmB,QAAlB;MAAA;IAA3I;EADF,EADF;AAKD"},"metadata":{},"sourceType":"module"}