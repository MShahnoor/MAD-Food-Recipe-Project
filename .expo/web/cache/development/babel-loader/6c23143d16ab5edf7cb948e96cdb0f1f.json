{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useLayoutEffect, useRef, useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport styles from \"./styles\";\nimport Carousel, { Pagination } from \"react-native-snap-carousel\";\nimport { getIngredientName, getCategoryName, getCategoryById } from \"../../data/MockDataAPI\";\nimport BackButton from \"../../components/BackButton/BackButton\";\nimport ViewIngredientsButton from \"../../components/ViewIngredientsButton/ViewIngredientsButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    viewportWidth = _Dimensions$get.width;\n\nexport default function RecipeScreen(props) {\n  var _route$params;\n\n  var navigation = props.navigation,\n      route = props.route;\n  var item = (_route$params = route.params) == null ? void 0 : _route$params.item;\n  var category = getCategoryById(item.categoryId);\n  var title = getCategoryName(category.id);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeSlide = _useState2[0],\n      setActiveSlide = _useState2[1];\n\n  var slider1Ref = useRef();\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerTransparent: \"true\",\n      headerLeft: function headerLeft() {\n        return _jsx(BackButton, {\n          onPress: function onPress() {\n            navigation.goBack();\n          }\n        });\n      },\n      headerRight: function headerRight() {\n        return _jsx(View, {});\n      }\n    });\n  }, []);\n\n  var renderImage = function renderImage(_ref) {\n    var item = _ref.item;\n    return _jsx(TouchableHighlight, {\n      children: _jsx(View, {\n        style: styles.imageContainer,\n        children: _jsx(Image, {\n          style: styles.image,\n          source: {\n            uri: item\n          }\n        })\n      })\n    });\n  };\n\n  var onPressIngredient = function onPressIngredient(item) {\n    var name = getIngredientName(item);\n    var ingredient = item;\n    navigation.navigate(\"Ingredient\", {\n      ingredient: ingredient,\n      name: name\n    });\n  };\n\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.carouselContainer,\n      children: _jsxs(View, {\n        style: styles.carousel,\n        children: [_jsx(Carousel, {\n          ref: slider1Ref,\n          data: item.photosArray,\n          renderItem: renderImage,\n          sliderWidth: viewportWidth,\n          itemWidth: viewportWidth,\n          inactiveSlideScale: 1,\n          inactiveSlideOpacity: 1,\n          firstItem: 0,\n          loop: false,\n          autoplay: false,\n          autoplayDelay: 500,\n          autoplayInterval: 3000,\n          onSnapToItem: function onSnapToItem(index) {\n            return setActiveSlide(0);\n          }\n        }), _jsx(Pagination, {\n          dotsLength: item.photosArray.length,\n          activeDotIndex: activeSlide,\n          containerStyle: styles.paginationContainer,\n          dotColor: \"rgba(255, 255, 255, 0.92)\",\n          dotStyle: styles.paginationDot,\n          inactiveDotColor: \"white\",\n          inactiveDotOpacity: 0.4,\n          inactiveDotScale: 0.6,\n          carouselRef: slider1Ref.current,\n          tappableDots: !!slider1Ref.current\n        })]\n      })\n    }), _jsxs(View, {\n      style: styles.infoRecipeContainer,\n      children: [_jsx(Text, {\n        style: styles.infoRecipeName,\n        children: item.title\n      }), _jsx(View, {\n        style: styles.infoContainer,\n        children: _jsx(TouchableHighlight, {\n          onPress: function onPress() {\n            return navigation.navigate(\"RecipesList\", {\n              category: category,\n              title: title\n            });\n          },\n          children: _jsx(Text, {\n            style: styles.category,\n            children: getCategoryName(item.categoryId).toUpperCase()\n          })\n        })\n      }), _jsxs(View, {\n        style: styles.infoContainer,\n        children: [_jsx(Image, {\n          style: styles.infoPhoto,\n          source: require(\"../../../assets/icons/time.png\")\n        }), _jsxs(Text, {\n          style: styles.infoRecipe,\n          children: [item.time, \" minutes \"]\n        })]\n      }), _jsx(View, {\n        style: styles.infoContainer,\n        children: _jsx(ViewIngredientsButton, {\n          onPress: function onPress() {\n            var ingredients = item.ingredients;\n            var title = \"Ingredients for \" + item.title;\n            navigation.navigate(\"IngredientsDetails\", {\n              ingredients: ingredients,\n              title: title\n            });\n          }\n        })\n      }), _jsx(View, {\n        style: styles.infoContainer,\n        children: _jsx(Text, {\n          style: styles.infoDescriptionRecipe,\n          children: item.description\n        })\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","useLayoutEffect","useRef","useState","styles","Carousel","Pagination","getIngredientName","getCategoryName","getCategoryById","BackButton","ViewIngredientsButton","Dimensions","get","viewportWidth","width","RecipeScreen","props","navigation","route","item","params","category","categoryId","title","id","activeSlide","setActiveSlide","slider1Ref","setOptions","headerTransparent","headerLeft","goBack","headerRight","renderImage","imageContainer","image","uri","onPressIngredient","name","ingredient","navigate","container","carouselContainer","carousel","photosArray","index","length","paginationContainer","paginationDot","current","infoRecipeContainer","infoRecipeName","infoContainer","toUpperCase","infoPhoto","require","infoRecipe","time","ingredients","infoDescriptionRecipe","description"],"sources":["C:/MAD/Food Recipe App/src/screens/Recipe/RecipeScreen.js"],"sourcesContent":["import React, { useLayoutEffect, useRef, useState } from \"react\";\nimport { ScrollView, Text, View, Image, Dimensions, TouchableHighlight } from \"react-native\";\nimport styles from \"./styles\";\nimport Carousel, { Pagination } from \"react-native-snap-carousel\";\nimport { getIngredientName, getCategoryName, getCategoryById } from \"../../data/MockDataAPI\";\nimport BackButton from \"../../components/BackButton/BackButton\";\nimport ViewIngredientsButton from \"../../components/ViewIngredientsButton/ViewIngredientsButton\";\n\nconst { width: viewportWidth } = Dimensions.get(\"window\");\n\nexport default function RecipeScreen(props) {\n  const { navigation, route } = props;\n\n  const item = route.params?.item;\n  const category = getCategoryById(item.categoryId);\n  const title = getCategoryName(category.id);\n\n  const [activeSlide, setActiveSlide] = useState(0);\n\n  const slider1Ref = useRef();\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerTransparent: \"true\",\n      headerLeft: () => (\n        <BackButton\n          onPress={() => {\n            navigation.goBack();\n          }}\n        />\n      ),\n      headerRight: () => <View />,\n    });\n  }, []);\n\n  const renderImage = ({ item }) => (\n    <TouchableHighlight>\n      <View style={styles.imageContainer}>\n        <Image style={styles.image} source={{ uri: item }} />\n      </View>\n    </TouchableHighlight>\n  );\n\n  const onPressIngredient = (item) => {\n    var name = getIngredientName(item);\n    let ingredient = item;\n    navigation.navigate(\"Ingredient\", { ingredient, name });\n  };\n\n  return (\n    <ScrollView style={styles.container}>\n      <View style={styles.carouselContainer}>\n        <View style={styles.carousel}>\n          <Carousel\n            ref={slider1Ref}\n            data={item.photosArray}\n            renderItem={renderImage}\n            sliderWidth={viewportWidth}\n            itemWidth={viewportWidth}\n            inactiveSlideScale={1}\n            inactiveSlideOpacity={1}\n            firstItem={0}\n            loop={false}\n            autoplay={false}\n            autoplayDelay={500}\n            autoplayInterval={3000}\n            onSnapToItem={(index) => setActiveSlide(0)}\n          />\n          <Pagination\n            dotsLength={item.photosArray.length}\n            activeDotIndex={activeSlide}\n            containerStyle={styles.paginationContainer}\n            dotColor=\"rgba(255, 255, 255, 0.92)\"\n            dotStyle={styles.paginationDot}\n            inactiveDotColor=\"white\"\n            inactiveDotOpacity={0.4}\n            inactiveDotScale={0.6}\n            carouselRef={slider1Ref.current}\n            tappableDots={!!slider1Ref.current}\n          />\n        </View>\n      </View>\n      <View style={styles.infoRecipeContainer}>\n        <Text style={styles.infoRecipeName}>{item.title}</Text>\n        <View style={styles.infoContainer}>\n          <TouchableHighlight onPress={() => navigation.navigate(\"RecipesList\", { category, title })}>\n            <Text style={styles.category}>{getCategoryName(item.categoryId).toUpperCase()}</Text>\n          </TouchableHighlight>\n        </View>\n\n        <View style={styles.infoContainer}>\n          <Image style={styles.infoPhoto} source={require(\"../../../assets/icons/time.png\")} />\n          <Text style={styles.infoRecipe}>{item.time} minutes </Text>\n        </View>\n\n        <View style={styles.infoContainer}>\n          <ViewIngredientsButton\n            onPress={() => {\n              let ingredients = item.ingredients;\n              let title = \"Ingredients for \" + item.title;\n              navigation.navigate(\"IngredientsDetails\", { ingredients, title });\n            }}\n          />\n        </View>\n        <View style={styles.infoContainer}>\n          <Text style={styles.infoDescriptionRecipe}>{item.description}</Text>\n        </View>\n      </View>\n    </ScrollView>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}