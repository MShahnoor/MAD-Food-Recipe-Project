{"ast":null,"code":"import React, { useLayoutEffect } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport styles from \"./styles\";\nimport { getIngredientUrl, getRecipesByIngredient, getCategoryName } from \"../../data/MockDataAPI\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function IngredientScreen(props) {\n  var _route$params, _route$params2;\n\n  var navigation = props.navigation,\n      route = props.route;\n  var ingredientId = (_route$params = route.params) == null ? void 0 : _route$params.ingredient;\n  var ingredientUrl = getIngredientUrl(ingredientId);\n  var ingredientName = (_route$params2 = route.params) == null ? void 0 : _route$params2.name;\n  useLayoutEffect(function () {\n    var _route$params3;\n\n    navigation.setOptions({\n      headerTitleStyle: {\n        fontWeight: \"700\",\n        textAlign: \"center\",\n        alignSelf: \"center\",\n        color: \"#ffffff\",\n        fontFamily: \"Roboto\"\n      },\n      title: (_route$params3 = route.params) == null ? void 0 : _route$params3.name\n    });\n  }, []);\n\n  var onPressRecipe = function onPressRecipe(item) {\n    navigation.navigate(\"Recipe\", {\n      item: item\n    });\n  };\n\n  var renderRecipes = function renderRecipes(_ref) {\n    var item = _ref.item;\n    return _jsx(TouchableHighlight, {\n      underlayColor: \"#3A3A3A\",\n      onPress: function onPress() {\n        return onPressRecipe(item);\n      },\n      children: _jsx(TouchableHighlight, {\n        underlayColor: \"#3A3A3A\",\n        onPress: function onPress() {\n          return onPressRecipe(item);\n        },\n        children: _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(ImageBackground, {\n            style: styles.photo,\n            source: {\n              uri: item.photo_url\n            },\n            children: _jsx(View, {\n              style: styles.gradientPhoto\n            })\n          }), _jsx(Text, {\n            style: styles.title,\n            children: item.title\n          }), _jsx(Text, {\n            style: styles.category,\n            children: getCategoryName(item.categoryId)\n          })]\n        })\n      })\n    });\n  };\n\n  return _jsxs(ScrollView, {\n    style: styles.mainContainer,\n    children: [_jsx(View, {\n      style: {\n        borderBottomWidth: 0.4,\n        marginBottom: 10,\n        borderBottomColor: \"grey\"\n      },\n      children: _jsx(ImageBackground, {\n        style: styles.photoIngredient,\n        source: {\n          uri: \"\" + ingredientUrl\n        },\n        children: _jsx(View, {\n          style: styles.gradientPhoto\n        })\n      })\n    }), _jsxs(Text, {\n      style: styles.ingredientInfo,\n      children: [\"Recipes with\", ingredientName, \":\"]\n    }), _jsx(View, {\n      style: {\n        backgroundColor: \"#313131\",\n        flex: 1\n      },\n      children: _jsx(FlatList, {\n        vertical: true,\n        showsVerticalScrollIndicator: false,\n        numColumns: 2,\n        data: getRecipesByIngredient(ingredientId),\n        renderItem: renderRecipes,\n        keyExtractor: function keyExtractor(item) {\n          return \"\" + item.recipeId;\n        }\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useLayoutEffect","styles","getIngredientUrl","getRecipesByIngredient","getCategoryName","IngredientScreen","props","navigation","route","ingredientId","params","ingredient","ingredientUrl","ingredientName","name","setOptions","headerTitleStyle","fontWeight","textAlign","alignSelf","color","fontFamily","title","onPressRecipe","item","navigate","renderRecipes","container","photo","uri","photo_url","gradientPhoto","category","categoryId","mainContainer","borderBottomWidth","marginBottom","borderBottomColor","photoIngredient","ingredientInfo","backgroundColor","flex","recipeId"],"sources":["C:/MAD/Food Recipe App/src/screens/Ingredient/IngredientScreen.js"],"sourcesContent":["import React, { useLayoutEffect } from \"react\";\r\nimport { FlatList, ScrollView, Text, View, Image, ImageBackground,TouchableHighlight } from \"react-native\";\r\nimport styles from \"./styles\";\r\nimport { getIngredientUrl, getRecipesByIngredient, getCategoryName } from \"../../data/MockDataAPI\";\r\n\r\nexport default function IngredientScreen(props) {\r\n  const { navigation, route } = props;\r\n\r\n  const ingredientId = route.params?.ingredient;\r\n  const ingredientUrl = getIngredientUrl(ingredientId);\r\n  const ingredientName = route.params?.name;\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerTitleStyle: {\r\n\t\t\t\tfontWeight: \"700\",\r\n\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\talignSelf: \"center\",\r\n\t\t\t\tcolor: \"#ffffff\",\r\n\t\t\t\tfontFamily: \"Roboto\",\r\n\t\t\t},\r\n      title: route.params?.name,\r\n    });\r\n  }, []);\r\n\r\n  const onPressRecipe = (item) => {\r\n    navigation.navigate(\"Recipe\", { item });\r\n  };\r\n\r\n  const renderRecipes = ({ item }) => (\r\n    <TouchableHighlight underlayColor=\"#3A3A3A\" onPress={() => onPressRecipe(item)}>\r\n      <TouchableHighlight underlayColor=\"#3A3A3A\" onPress={() => onPressRecipe(item)}>\r\n        <View style={styles.container}>\r\n          <ImageBackground style={styles.photo} source={{ uri: item.photo_url }}>\r\n            <View style={styles.gradientPhoto}></View>\r\n            </ImageBackground>\r\n          <Text style={styles.title}>{item.title}</Text>\r\n          <Text style={styles.category}>{getCategoryName(item.categoryId)}</Text>\r\n        </View>\r\n      </TouchableHighlight>\r\n    </TouchableHighlight>\r\n  );\r\n\r\n  return (\r\n    <ScrollView style={styles.mainContainer}>\r\n      <View style={{ borderBottomWidth: 0.4, marginBottom: 10, borderBottomColor: \"grey\" }}>\r\n        <ImageBackground style={styles.photoIngredient} source={{ uri: \"\" + ingredientUrl }} \r\n        >\r\n          <View style={styles.gradientPhoto}></View>\r\n          </ImageBackground>\r\n      </View>\r\n      <Text style={styles.ingredientInfo}>Recipes with{ingredientName}:</Text>\r\n      <View style={{\r\n\t\t\t\tbackgroundColor: \"#313131\",\r\n\t\t\t\tflex: 1,\r\n\t\t\t}}>\r\n        <FlatList vertical showsVerticalScrollIndicator={false} \r\n        numColumns={2} \r\n        data={getRecipesByIngredient(ingredientId)} \r\n        renderItem={renderRecipes} keyExtractor={(item) => `${item.recipeId}`} />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}