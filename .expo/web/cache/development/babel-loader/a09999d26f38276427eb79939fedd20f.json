{"ast":null,"code":"import React, { useLayoutEffect } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport styles from \"./styles\";\nimport { getIngredientUrl, getRecipesByIngredient, getCategoryName } from \"../../data/MockDataAPI\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function IngredientScreen(props) {\n  var _route$params, _route$params2;\n\n  var navigation = props.navigation,\n      route = props.route;\n  var ingredientId = (_route$params = route.params) == null ? void 0 : _route$params.ingredient;\n  var ingredientUrl = getIngredientUrl(ingredientId);\n  var ingredientName = (_route$params2 = route.params) == null ? void 0 : _route$params2.name;\n  useLayoutEffect(function () {\n    var _route$params3;\n\n    navigation.setOptions({\n      title: (_route$params3 = route.params) == null ? void 0 : _route$params3.name\n    });\n  }, []);\n\n  var onPressRecipe = function onPressRecipe(item) {\n    navigation.navigate(\"Recipe\", {\n      item: item\n    });\n  };\n\n  var renderRecipes = function renderRecipes(_ref) {\n    var item = _ref.item;\n    return _jsx(TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,0.9)\",\n      onPress: function onPress() {\n        return onPressRecipe(item);\n      },\n      children: _jsx(TouchableHighlight, {\n        underlayColor: \"rgba(73,182,77,0.9)\",\n        onPress: function onPress() {\n          return onPressRecipe(item);\n        },\n        children: _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(Image, {\n            style: styles.photo,\n            source: {\n              uri: item.photo_url\n            }\n          }), _jsx(Text, {\n            style: styles.title,\n            children: item.title\n          }), _jsx(Text, {\n            style: styles.category,\n            children: getCategoryName(item.categoryId)\n          })]\n        })\n      })\n    });\n  };\n\n  return _jsxs(ScrollView, {\n    style: styles.mainContainer,\n    children: [_jsx(View, {\n      style: {\n        borderBottomWidth: 0.4,\n        marginBottom: 10,\n        borderBottomColor: \"grey\"\n      },\n      children: _jsx(Image, {\n        style: styles.photoIngredient,\n        source: {\n          uri: \"\" + ingredientUrl\n        }\n      })\n    }), _jsxs(Text, {\n      style: styles.ingredientInfo,\n      children: [\"Recipes with \", ingredientName, \":\"]\n    }), _jsx(View, {\n      children: _jsx(FlatList, {\n        vertical: true,\n        showsVerticalScrollIndicator: false,\n        numColumns: 2,\n        data: getRecipesByIngredient(ingredientId),\n        renderItem: renderRecipes,\n        keyExtractor: function keyExtractor(item) {\n          return \"\" + item.recipeId;\n        }\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useLayoutEffect","styles","getIngredientUrl","getRecipesByIngredient","getCategoryName","IngredientScreen","props","navigation","route","ingredientId","params","ingredient","ingredientUrl","ingredientName","name","setOptions","title","onPressRecipe","item","navigate","renderRecipes","container","photo","uri","photo_url","category","categoryId","mainContainer","borderBottomWidth","marginBottom","borderBottomColor","photoIngredient","ingredientInfo","recipeId"],"sources":["C:/MAD/Food Recipe App/src/screens/Ingredient/IngredientScreen.js"],"sourcesContent":["import React, { useLayoutEffect } from \"react\";\nimport { FlatList, ScrollView, Text, View, Image, TouchableHighlight } from \"react-native\";\nimport styles from \"./styles\";\nimport { getIngredientUrl, getRecipesByIngredient, getCategoryName } from \"../../data/MockDataAPI\";\n\nexport default function IngredientScreen(props) {\n\tconst { navigation, route } = props;\n\n\tconst ingredientId = route.params?.ingredient;\n\tconst ingredientUrl = getIngredientUrl(ingredientId);\n\tconst ingredientName = route.params?.name;\n\n\tuseLayoutEffect(() => {\n\t\tnavigation.setOptions({\n\t\t\ttitle: route.params?.name,\n\t\t});\n\t}, []);\n\n\tconst onPressRecipe = item => {\n\t\tnavigation.navigate(\"Recipe\", { item });\n\t};\n\n\tconst renderRecipes = ({ item }) => (\n\t\t<TouchableHighlight\n\t\t\tunderlayColor=\"rgba(73,182,77,0.9)\"\n\t\t\tonPress={() => onPressRecipe(item)}\n\t\t>\n\t\t\t<TouchableHighlight\n\t\t\t\tunderlayColor=\"rgba(73,182,77,0.9)\"\n\t\t\t\tonPress={() => onPressRecipe(item)}\n\t\t\t>\n\t\t\t\t<View style={styles.container}>\n\t\t\t\t\t<Image\n\t\t\t\t\t\tstyle={styles.photo}\n\t\t\t\t\t\tsource={{\n\t\t\t\t\t\t\turi: item.photo_url,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<Text style={styles.title}>\n\t\t\t\t\t\t{item.title}\n\t\t\t\t\t</Text>\n\t\t\t\t\t<Text style={styles.category}>\n\t\t\t\t\t\t{getCategoryName(\n\t\t\t\t\t\t\titem.categoryId\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Text>\n\t\t\t\t</View>\n\t\t\t</TouchableHighlight>\n\t\t</TouchableHighlight>\n\t);\n\n\treturn (\n\t\t<ScrollView style={styles.mainContainer}>\n\t\t\t<View\n\t\t\t\tstyle={{\n\t\t\t\t\tborderBottomWidth: 0.4,\n\t\t\t\t\tmarginBottom: 10,\n\t\t\t\t\tborderBottomColor: \"grey\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Image\n\t\t\t\t\tstyle={styles.photoIngredient}\n\t\t\t\t\tsource={{\n\t\t\t\t\t\turi:\n\t\t\t\t\t\t\t\"\" +\n\t\t\t\t\t\t\tingredientUrl,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t\t<Text style={styles.ingredientInfo}>\n\t\t\t\tRecipes with {ingredientName}:\n\t\t\t</Text>\n\t\t\t<View>\n\t\t\t\t<FlatList\n\t\t\t\t\tvertical\n\t\t\t\t\tshowsVerticalScrollIndicator={\n\t\t\t\t\t\tfalse\n\t\t\t\t\t}\n\t\t\t\t\tnumColumns={2}\n\t\t\t\t\tdata={getRecipesByIngredient(\n\t\t\t\t\t\tingredientId\n\t\t\t\t\t)}\n\t\t\t\t\trenderItem={renderRecipes}\n\t\t\t\t\tkeyExtractor={item =>\n\t\t\t\t\t\t`${item.recipeId}`\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t</ScrollView>\n\t);\n}\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,eAAhB,QAAuC,OAAvC;;;;;;;AAEA,OAAOC,MAAP;AACA,SAASC,gBAAT,EAA2BC,sBAA3B,EAAmDC,eAAnD;;;AAEA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;EAAA;;EAC/C,IAAQC,UAAR,GAA8BD,KAA9B,CAAQC,UAAR;EAAA,IAAoBC,KAApB,GAA8BF,KAA9B,CAAoBE,KAApB;EAEA,IAAMC,YAAY,oBAAGD,KAAK,CAACE,MAAT,qBAAG,cAAcC,UAAnC;EACA,IAAMC,aAAa,GAAGV,gBAAgB,CAACO,YAAD,CAAtC;EACA,IAAMI,cAAc,qBAAGL,KAAK,CAACE,MAAT,qBAAG,eAAcI,IAArC;EAEAd,eAAe,CAAC,YAAM;IAAA;;IACrBO,UAAU,CAACQ,UAAX,CAAsB;MACrBC,KAAK,oBAAER,KAAK,CAACE,MAAR,qBAAE,eAAcI;IADA,CAAtB;EAGA,CAJc,EAIZ,EAJY,CAAf;;EAMA,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI,EAAI;IAC7BX,UAAU,CAACY,QAAX,CAAoB,QAApB,EAA8B;MAAED,IAAI,EAAJA;IAAF,CAA9B;EACA,CAFD;;EAIA,IAAME,aAAa,GAAG,SAAhBA,aAAgB;IAAA,IAAGF,IAAH,QAAGA,IAAH;IAAA,OACrB,KAAC,kBAAD;MACC,aAAa,EAAC,qBADf;MAEC,OAAO,EAAE;QAAA,OAAMD,aAAa,CAACC,IAAD,CAAnB;MAAA,CAFV;MAAA,UAIC,KAAC,kBAAD;QACC,aAAa,EAAC,qBADf;QAEC,OAAO,EAAE;UAAA,OAAMD,aAAa,CAACC,IAAD,CAAnB;QAAA,CAFV;QAAA,UAIC,MAAC,IAAD;UAAM,KAAK,EAAEjB,MAAM,CAACoB,SAApB;UAAA,WACC,KAAC,KAAD;YACC,KAAK,EAAEpB,MAAM,CAACqB,KADf;YAEC,MAAM,EAAE;cACPC,GAAG,EAAEL,IAAI,CAACM;YADH;UAFT,EADD,EAOC,KAAC,IAAD;YAAM,KAAK,EAAEvB,MAAM,CAACe,KAApB;YAAA,UACEE,IAAI,CAACF;UADP,EAPD,EAUC,KAAC,IAAD;YAAM,KAAK,EAAEf,MAAM,CAACwB,QAApB;YAAA,UACErB,eAAe,CACfc,IAAI,CAACQ,UADU;UADjB,EAVD;QAAA;MAJD;IAJD,EADqB;EAAA,CAAtB;;EA6BA,OACC,MAAC,UAAD;IAAY,KAAK,EAAEzB,MAAM,CAAC0B,aAA1B;IAAA,WACC,KAAC,IAAD;MACC,KAAK,EAAE;QACNC,iBAAiB,EAAE,GADb;QAENC,YAAY,EAAE,EAFR;QAGNC,iBAAiB,EAAE;MAHb,CADR;MAAA,UAOC,KAAC,KAAD;QACC,KAAK,EAAE7B,MAAM,CAAC8B,eADf;QAEC,MAAM,EAAE;UACPR,GAAG,EACF,KACAX;QAHM;MAFT;IAPD,EADD,EAiBC,MAAC,IAAD;MAAM,KAAK,EAAEX,MAAM,CAAC+B,cAApB;MAAA,4BACenB,cADf;IAAA,EAjBD,EAoBC,KAAC,IAAD;MAAA,UACC,KAAC,QAAD;QACC,QAAQ,MADT;QAEC,4BAA4B,EAC3B,KAHF;QAKC,UAAU,EAAE,CALb;QAMC,IAAI,EAAEV,sBAAsB,CAC3BM,YAD2B,CAN7B;QASC,UAAU,EAAEW,aATb;QAUC,YAAY,EAAE,sBAAAF,IAAI;UAAA,YACdA,IAAI,CAACe,QADS;QAAA;MAVnB;IADD,EApBD;EAAA,EADD;AAuCA"},"metadata":{},"sourceType":"module"}